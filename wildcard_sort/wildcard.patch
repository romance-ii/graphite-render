--- webapp.orig/graphite/render/evaluator.py	2010-01-24 22:36:52.000000000 -0800
+++ webapp/graphite/render/evaluator.py	2011-09-29 10:19:20.000000000 -0700
@@ -37,7 +37,12 @@
     seriesList = []
     (startTime,endTime) = originalTime or timeInterval
 
+    path_list = []
     for dbFile in settings.STORE.find(pathExpr):
+      path_list.append(dbFile)
+    path_list.sort(natcmp)
+
+    for dbFile in path_list:
       log.metric_access(dbFile.metric_path)
       getCacheResults = CarbonLink.sendRequest(dbFile.real_metric)
       dbResults = dbFile.fetch( timestamp(startTime), timestamp(endTime) )
@@ -98,3 +103,18 @@
       pass
 
   return (timeInfo,values)
+
+
+def try_int(s):
+    "Convert to integer if possible."
+    try: return int(s)
+    except: return s
+
+def natsort_key(s):
+    "Used internally to get a tuple by which s is sorted."
+    import re
+    return map(try_int, re.findall(r'(\d+|\D+)', s))
+
+def natcmp(a, b):
+    "Natural string comparison, case sensitive."
+    return cmp(natsort_key(a.metric_path), natsort_key(b.metric_path))
